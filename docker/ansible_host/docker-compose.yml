services:
  ansible:
    # To rebuild the image, run either of the two:
    # docker compose up --build
    # docker build -f ./Dockerfile -t ansible-automation ../..
    build:
      context: ../..
      dockerfile: docker/ansible_host/Dockerfile
    container_name: ansible
    image: ansible-automation:latest
    volumes:
      - ../../ansible:/ansible
      - ../../ansible/ansible.cfg:/etc/ansible/ansible.cfg:ro
      - ../../certs/${ENVIRONMENT}/:/certs:ro
      - ../../.ssh_keys/ansible:/root/.ssh
      - ./scripts:/usr/local/bin
    env_file:
      - .env
    environment:
      - RESET_HOSTS_FILE=false
      - RUN_TESTS=${RUN_TESTS:-false}
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - COMPOSE_PROFILES=${COMPOSE_PROFILES:-default}
      # As the certs directory is not committed to Git, so to set RUN_WITH_CERTIFICATE to true,
      # we first need to create a script to generate certs on linux machine, i.e. in ansible container.
      - RUN_WITH_CERTIFICATE=${RUN_WITH_CERTIFICATE}
    extra_hosts:
      - local_windows_vm:host-gateway # The host-gateway keyword resolves to the host's IP address on the bridge network.
    network_mode: host
    stdin_open: true
    tty: true
