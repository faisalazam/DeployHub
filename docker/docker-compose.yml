services:
  ansible:
    # To rebuild the image, run either of the two:
    # docker-compose up --build
    # docker build -f ./Dockerfile.ansible -t ansible-automation ..
    build:
      context: ..
      dockerfile: docker/Dockerfile.ansible
    container_name: ansible
    image: ansible-automation:latest
    volumes:
      - ../ansible:/ansible:ro
      - ../ansible/ansible.cfg:/etc/ansible/ansible.cfg
      - ../certs/${ENVIRONMENT}/:/certs:ro
      - ../.ssh_keys/${ENVIRONMENT}:/root/.ssh
      - ./scripts/setup.sh:/usr/local/bin/setup.sh
      - ./scripts/run_tests.sh:/usr/local/bin/run_tests.sh
      - ./scripts/execute_playbooks.sh:/usr/local/bin/execute_playbooks.sh
      - ./scripts/pre_playbook_checks.sh:/usr/local/bin/pre_playbook_checks.sh
    env_file:
      - .env
    environment:
      - RUN_TESTS=${RUN_TESTS:-false}
      - ENVIRONMENT=${ENVIRONMENT:-local}
      - COMPOSE_PROFILES=${COMPOSE_PROFILES:-default}
      - RUN_WITH_CERTIFICATE=${RUN_WITH_CERTIFICATE}
    extra_hosts:
      - local_windows_vm:host-gateway # The host-gateway keyword resolves to the host's IP address on the bridge network.
    networks:
      - ansible_network
    stdin_open: true
    tty: true
    depends_on:
      linux_ssh_pass_host:
        condition: service_healthy
      linux_ssh_keys_host:
        condition: service_healthy
    profiles: ["default", "test"]

  linux_ssh_pass_host:
    # To rebuild the image, run either of the two:
    # docker-compose up --build
    # docker build -f ./Dockerfile.linuxSshPassHost -t linux_ssh_pass_host ..
    build:
      context: ..
      dockerfile: docker/Dockerfile.linuxSshPassHost
    container_name: linux_ssh_pass_host
    image: linux_ssh_pass_host:latest
    tty: true
    stdin_open: true
    networks:
      - ansible_network
    healthcheck:
      test: [ "CMD", "sshd", "-t" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["default", "test"]

  linux_ssh_keys_host:
    # To rebuild the image, run either of the two:
    # docker-compose up --build
    # docker build -f ./Dockerfile.linuxSshKeysHost -t linux_ssh_keys_host ..
    build:
      context: ..
      dockerfile: docker/Dockerfile.linuxSshKeysHost
    container_name: linux_ssh_keys_host
    image: linux_ssh_keys_host:latest
    volumes:
      - ../.ssh_keys/${ENVIRONMENT}/id_rsa.pub:/root/.ssh/authorized_keys
    tty: true
    stdin_open: true
    networks:
      - ansible_network
    healthcheck:
      test: [ "CMD", "sshd", "-t" ]
      interval: 10s
      timeout: 5s
      retries: 5
    profiles: ["default", "test"]

networks:
  ansible_network:
    driver: bridge
