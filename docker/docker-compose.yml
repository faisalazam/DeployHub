services:
  ansible:
    # To rebuild the image, run either of the two:
    # docker-compose up --build
    # docker build -f ./Dockerfile.ansible -t ansible-automation ..
    build:
      context: ..
      dockerfile: docker/Dockerfile.ansible
    container_name: ansible
    image: ansible-automation:latest
    volumes:
      - ../ansible:/ansible
      - ../ansible/ansible.cfg:/etc/ansible/ansible.cfg
    env_file:
      - .env
    environment:
      - ENVIRONMENT=${ENVIRONMENT:-local}
#    network_mode: "host" # Use host network for SSH for Windows running on vagrant
    networks:
      - ansible_network
    stdin_open: true
    tty: true
    entrypoint: >
      sh -c "
        ansible-playbook -i /ansible/inventory/${ENVIRONMENT}/hosts.yml /ansible/playbooks/deploy_linux.yml -e ENVIRONMENT=${ENVIRONMENT}
        tail -f /dev/null
      "
    depends_on:
      linux_ssh_pass_host:
        condition: service_healthy

  linux_ssh_pass_host:
    # To rebuild the image, run either of the two:
    # docker-compose up --build
    # docker build -f ./Dockerfile.linuxSshPassHost -t linux_ssh_pass_host ..
    build:
      context: ..
      dockerfile: docker/Dockerfile.linuxSshPassHost
    container_name: linux_ssh_pass_host
    image: linux_ssh_pass_host:latest
    tty: true
    stdin_open: true
    networks:
      - ansible_network
    healthcheck:
      test: [ "CMD", "sshd", "-t" ]
      interval: 10s
      timeout: 5s
      retries: 5
    ports:
      - "2222:22"

networks:
  ansible_network:
    driver: bridge