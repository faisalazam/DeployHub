---
- name: Gather OS Facts
  ansible.builtin.setup:
  become: true

- name: Include tasks to construct the Tomcat service name
  ansible.builtin.include_tasks: construct_service_name.yml

- name: Ensure logs directory exists
  ansible.windows.win_file:
    path: "{{ upgrade_tomcat_utility_destination_path }}\\logs"
    state: directory

- name: Define log file path
  ansible.builtin.set_fact:
    upgrade_tomcat_utility_log_path: "{{ upgrade_tomcat_utility_destination_path }}\\logs\\{{ ansible_hostname }}_upgrade.log"

- name: Set common parameters for the PowerShell script
  ansible.builtin.set_fact:
    common_params:
      jvmDLLPath: "{{ upgrade_tomcat_jvm_dll_path }}"
      maxMemoryPool: "{{ upgrade_tomcat_max_memory_pool }}"
      initialMemoryPool: "{{ upgrade_tomcat_initial_memory_pool }}"
      serviceToUninstall: "{{ upgrade_tomcat_service_to_uninstall }}"
      upgradedServiceName: "{{ upgrade_tomcat_upgraded_service_name }}"
      currentServiceToUpgrade: "{{ upgrade_tomcat_current_service_to_upgrade }}"
      tomcatInstallationDrive: "{{ upgrade_tomcat_tomcat_installation_drive }}"
      setupLogOnCreds: "{{ upgrade_tomcat_setup_log_on_creds }}"

- name: Execute PowerShell script without logon credentials
  ansible.windows.win_powershell:
    script: "{{ lookup('file', 'scripts/temp.ps1') }}"
    parameters: "{{ common_params }}"
  when: not upgrade_tomcat_setup_log_on_creds
  register: ps_output_without_creds

- name: Execute PowerShell script with logon credentials
  ansible.windows.win_powershell:
    script: "{{ lookup('file', 'scripts/temp.ps1') }}"
    parameters: >-
      {{
        common_params | combine({
          'tomcatLogOnUsername': upgrade_tomcat_log_on_username
        })
      }}
    sensitive_parameters:
      - name: tomcatLogOnPassword
        value: "{{ upgrade_tomcat_log_on_password }}"
  when: upgrade_tomcat_setup_log_on_creds
  register: ps_output_with_creds

- name: Set ps_output to the result of the executed task
  ansible.builtin.set_fact:
    ps_output: "{{ (ps_output_with_creds if upgrade_tomcat_setup_log_on_creds else ps_output_without_creds) }}"

- name: Write PowerShell output (host_out and host_err) to log file
  ansible.windows.win_copy:
    content: >-
      {{
        ((ps_output.host_out | default('')) ~ (ps_output.host_err | default('')))
        | regex_replace('\r\n', '\n')
      }}
    dest: "{{ upgrade_tomcat_utility_log_path }}"

- name: Include tasks to check the logs
  ansible.builtin.include_tasks: check_logs.yml
