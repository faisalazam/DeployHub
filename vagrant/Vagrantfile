# Constants for configuration

VM_CPUS = 2
VM_GUI = false
VM_MEMORY = "4096"
VM_IP = "192.168.56.189" # The default subnet for Vagrant's private network is 192.168.56.0/24
VM_NAME = "WINDOWS_SERVER"
VM_HOSTNAME = "windows-2019-vagrant"

BOOT_TIMEOUT = 600
VAGRANT_PROVIDER = "virtualbox"
VAGRANT_BOX_VERSION = "2021.05.15"
VAGRANT_BOX_NAME = "StefanScherer/windows_2019"

WINRM_HTTP_PORT = 55985
WINRM_HTTPS_PORT = 55986
VM_COMMUNICATOR = "winrm"
WINRM_USERNAME = "vagrant"
WINRM_PASSWORD = "vagrant"

Vagrant.configure("2") do |config|
    config.vm.box = VAGRANT_BOX_NAME
    config.vm.box_version = VAGRANT_BOX_VERSION

    # Set up VM hostname
    config.vm.hostname = VM_HOSTNAME

    # Increase WinRM timeout to allow VM more time to boot
    config.vm.boot_timeout = BOOT_TIMEOUT

    # Set up the VM to use a private network
    config.vm.network "private_network", type: "static", ip: VM_IP

    config.vm.provision "shell", inline: <<-SHELL
        # Define the log file path
        $logFilePath = "C:\temp\vm_ip_log.txt"

        # Find the network adapter with the specific static IP
        $networkAdapter = Get-NetIPAddress -AddressFamily IPv4 | Where-Object { $_.IPAddress -eq "#{VM_IP}" }

        if ($networkAdapter) {
            # Notify the user on the console and write to the log file
            Write-Host "Static IP is correctly set to #{VM_IP}"
            "Static IP is correctly set to #{VM_IP}" | Out-File -Append $logFilePath
        } else {
            # Get the current IP
            $currentIP = (Get-NetIPAddress -AddressFamily IPv4).IPAddress
            # Notify the user on the console and write to the log file
            Write-Host "Warning: Static IP is not set to #{VM_IP}. Current IP is $currentIP"
            "Warning: Static IP is not set to #{VM_IP}. Current IP is $currentIP" | Out-File -Append $logFilePath
        }

        Remove-Item -Path $logFilePath -Force
    SHELL

    config.vm.provider VAGRANT_PROVIDER do |vb|
        vb.gui = VM_GUI
        vb.cpus = VM_CPUS
        vb.name = VM_NAME
        vb.memory = VM_MEMORY
    end

    # Set the guest OS type
    config.vm.guest = :windows

    # Set WinRM transport, username, password, and port
    config.winrm.transport = :negotiate
    config.winrm.port = WINRM_HTTP_PORT
    config.winrm.username = WINRM_USERNAME
    config.winrm.password = WINRM_PASSWORD

    # Set the communicator for VM
    config.vm.communicator = VM_COMMUNICATOR

    # Provision WinRM configuration
    config.vm.provision "shell", path: "scripts/winrm_setup.ps1"

    # Additional provisioning steps (if needed) can be added here
end
